#!/usr/bin/python

DOCUMENTATION = '''
---
module: db2_instances
short_description: Makes all db2 instances available as ansible facts for later use.
description:
  - Makes all db2 instances available as ansible facts for later use. All the db2 installations are used, provided they
  - reside in the same base directory (see "db2dir" and "db2dirprefix").

author: Yoram Hekma
requirements:
  - python > 2.6

options:
  db2dir:
    description:
      - Path in which db2 is installed.
    required: false
    default: /opt/IBM/db2
  db2dirprefix:
    description:
      - String with which the db2 dirs must start. Useful when the "db2dir" not only contains db2 installations.
    required: false
    default: "V*"
'''

EXAMPLES = '''
- action: db2_instances
- action: db2_instances db2dir=/opt/custom_db2_install db2dirprefix="Version*"
'''

from fnmatch import fnmatch
import os


def main():
    module = AnsibleModule(
        argument_spec = dict(
            db2dir = dict(required=False, default="/opt/IBM/db2"),
            db2prefix = dict(required=False, default='V*'),
        )
    )

    db2dir = module.params['db2dir']
    db2prefix = module.params['db2prefix']
    db2dirlist = []

    for I in os.listdir(db2dir):
        if fnmatch(I, db2prefix):
            d = os.path.join(db2dir, I)
            db2dirlist.append(d)

    res_args = {}

    for db2 in db2dirlist:
        rc, out, err = module.run_command("%s/instance/db2ilist" % db2)
        #instancelist =  [l.strip() for l in out]
        try:
            res_args['ansible_facts']['db2instances'] = out.splitlines()
        except KeyError:
            res_args['ansible_facts'] = {'db2instances': out.splitlines()}

    module.exit_json(**res_args)


from ansible.module_utils.basic import * # NOQA
main()
